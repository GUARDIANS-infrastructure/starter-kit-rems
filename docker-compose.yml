services:

  app:
    container_name: rems_app
    image: cscfi/rems:latest
    depends_on:
      db:
        condition: service_started
    ports:
      # listen on loopback only if you've set up a reverse proxy
      # - "127.0.0.1:3000:3000"
      - "0.0.0.0:3000:3000"
    volumes:
      - ./config.edn:/rems/config/config.edn
      - ./styles.css:/rems/theme/styles.css
      - ./theme.edn:/rems/theme/theme.edn
      - ./en.edn:/rems/theme/extra-translations/en.edn
      - ./logo_medium.png:/rems/theme/public/img/logo_medium.png
      - ./logo_small.png:/rems/theme/public/img/logo_small.png
      - ./login.png:/rems/theme/public/img/login.png
      - ./private-key.jwk:/rems/keys/private-key.jwk
      - ./public-key.jwk:/rems/keys/public-key.jwk

  db:
    container_name: rems_db
    image: postgres:13
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:5432:5432"
    # remove this if you don't want a persistent database
    volumes:
    - remsdb:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-h",
          "localhost",
          "-U",
          "rems"
        ]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  remsdb:
    driver: local
